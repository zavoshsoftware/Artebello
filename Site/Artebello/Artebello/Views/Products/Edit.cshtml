@model Models.Product

@{
    ViewBag.Title = "ویرایش " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Products",FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Code)
			 
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>
			
	    <div class="form-group">
		    @Html.LabelFor(model => model.Summery, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.EditorFor(model => model.Summery)

			    @Html.ValidationMessageFor(model => model.Summery)
		    </div>
	    </div>

	    <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Amount)
                @Html.ValidationMessageFor(model => model.Amount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Body)
                @Html.ValidationMessageFor(model => model.Body)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.Kendo().Upload().Name("fileUpload").Multiple(false)
	 @Html.HiddenFor(model => model.ImageUrl)
                @Html.ValidationMessageFor(model => model.ImageUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeaderUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().Upload().Name("headerUpload").Multiple(false)
                @Html.HiddenFor(model => model.HeaderUrl)
                @Html.ValidationMessageFor(model => model.HeaderUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dimensions, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dimensions)

                @Html.ValidationMessageFor(model => model.Dimensions)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)

                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Material, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Material)

                @Html.ValidationMessageFor(model => model.Material)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateYear, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.CreateYear)
                @Html.ValidationMessageFor(model => model.CreateYear)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity)
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellerId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SellerId", String.Empty)
                @Html.ValidationMessageFor(model => model.SellerId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductGroupId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductGroupId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductGroupId)
            </div>
        </div>
	    <div class="form-group">
		    @Html.LabelFor(model => model.ProductColorId, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.DropDownList("ProductColorId", String.Empty)
			    @Html.ValidationMessageFor(model => model.ProductColorId)
		    </div>
	    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductThemeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductThemeId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductThemeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductTypeId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductMediumId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductMediumId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductMediumId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductOrientationId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductOrientationId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductOrientationId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.DiscountAmount)
                @Html.ValidationMessageFor(model => model.DiscountAmount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInPromotion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsInPromotion)
                @Html.ValidationMessageFor(model => model.IsInPromotion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInHome, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsInHome)
                @Html.ValidationMessageFor(model => model.IsInHome)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

	 @Html.HiddenFor(model => model.CreationDate)
  

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
    </div>
}

